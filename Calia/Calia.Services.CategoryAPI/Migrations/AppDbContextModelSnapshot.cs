// <auto-generated />
using Calia.Services.CategoryAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Calia.Services.CategoryAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Calia.Services.CategoryAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("ProductCount")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Espresso Bar",
                            ProductCount = false
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Brew Bar",
                            ProductCount = false
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Hot Drinks",
                            ProductCount = false
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "Soft Drinks",
                            ProductCount = false
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 5,
                            Name = "Ice Coffee",
                            ProductCount = false
                        },
                        new
                        {
                            Id = 6,
                            DisplayOrder = 6,
                            Name = "Bitki Çayları",
                            ProductCount = false
                        },
                        new
                        {
                            Id = 7,
                            DisplayOrder = 7,
                            Name = "Frozen",
                            ProductCount = false
                        },
                        new
                        {
                            Id = 8,
                            DisplayOrder = 8,
                            Name = "Milkshake",
                            ProductCount = false
                        },
                        new
                        {
                            Id = 9,
                            DisplayOrder = 9,
                            Name = "Smoothie",
                            ProductCount = false
                        },
                        new
                        {
                            Id = 10,
                            DisplayOrder = 10,
                            Name = "Handmade",
                            ProductCount = false
                        },
                        new
                        {
                            Id = 11,
                            DisplayOrder = 11,
                            Name = "Moctails",
                            ProductCount = false
                        },
                        new
                        {
                            Id = 12,
                            DisplayOrder = 12,
                            Name = "Şuruplar",
                            ProductCount = false
                        },
                        new
                        {
                            Id = 13,
                            DisplayOrder = 13,
                            Name = "Tatlılar",
                            ProductCount = true
                        },
                        new
                        {
                            Id = 14,
                            DisplayOrder = 14,
                            Name = "Kruvasan",
                            ProductCount = true
                        });
                });

            modelBuilder.Entity("Calia.Services.CategoryAPI.Models.CategoryExtra", b =>
                {
                    b.Property<int>("ExtraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtraId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ExtraName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ExtraPrice")
                        .HasColumnType("float");

                    b.HasKey("ExtraId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryExtras");
                });

            modelBuilder.Entity("Calia.Services.CategoryAPI.Models.CategoryMaterial", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterialId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryMaterials");
                });

            modelBuilder.Entity("Calia.Services.CategoryAPI.Models.CategoryExtra", b =>
                {
                    b.HasOne("Calia.Services.CategoryAPI.Models.Category", "Category")
                        .WithMany("CategoryExtras")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Calia.Services.CategoryAPI.Models.CategoryMaterial", b =>
                {
                    b.HasOne("Calia.Services.CategoryAPI.Models.Category", "Category")
                        .WithMany("CategoryMaterials")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Calia.Services.CategoryAPI.Models.Category", b =>
                {
                    b.Navigation("CategoryExtras");

                    b.Navigation("CategoryMaterials");
                });
#pragma warning restore 612, 618
        }
    }
}
