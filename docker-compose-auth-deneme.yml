version: "3.8"

services:
  
  mssql_db:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: mssql_db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Keremkerem11!
    ports:
      - "1433:1433"
    networks:
      - app-network
    volumes:
      - sql_data:/var/opt/mssql
    restart: always

  auth_api:
    build:
      context: ./Calia
      dockerfile: Calia.Services.AuthAPI/Dockerfile
    container_name: auth_api
    ports:
      - "5001:8080"
    depends_on:
      - mssql_db
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs  
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - DOTNET_ENVIRONMENT=Docker
      - ConnectionStrings__DefaultConnection=Server=mssql_db,1433;Database=AuthDB;User Id=sa;Password=Keremkerem11!;TrustServerCertificate=True

  seq_log_service:
    image: datalust/seq:latest
    container_name: seq_log_service
    ports:
      - "5341:5341"
      - "8081:80"
    environment:
      - ACCEPT_EULA=Y  
    networks:
      - app-network
    volumes:
      - seq_data:/data  

  loki:
    image: grafana/loki:2.8.2
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    networks:
      - app-network

  promtail:
    image: grafana/promtail:2.8.2
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail-config.yml:/etc/promtail/promtail-config.yml
    command: -config.file=/etc/promtail/promtail-config.yml
    depends_on:
      - loki
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - loki
    networks:
      - app-network
    volumes:
      - grafana_data:/var/lib/grafana

  calia_web:
    build:
      context: ./Calia
      dockerfile: Calia.Web/Dockerfile
    container_name: calia_web
    ports:
      - "5000:8080"
    depends_on:
      - auth_api
    networks:
      - app-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - DOTNET_ENVIRONMENT=Docker
      - AUTH_API_URL=http://auth_api:8080

networks:
  app-network:

volumes:
  sql_data:
  seq_data:
  loki_data:
  grafana_data:
  logs:
